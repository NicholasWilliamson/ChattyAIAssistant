

#!/bin/bash
#
# Chatty AI Startup Script - Final Fix
#

# Configuration
VIDEO_PATH="/home/nickspi5/Chatty_AI/Chatty_AI_starting.mp4"
LOADING_PAGE="/home/nickspi5/Chatty_AI/templates/chatty_loading.html"
BLACK_PAGE="/home/nickspi5/Chatty_AI/templates/black.html"
CHATTY_URL="http://localhost:5000"
LOG_FILE="/home/nickspi5/Chatty_AI/logs/startup.log"

# Create log directory
mkdir -p /home/nickspi5/Chatty_AI/logs

# Function to log messages
log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# Start logging
log_message "========================================="
log_message "Chatty AI Startup Sequence Initiated"
log_message "========================================="

# Set display
export DISPLAY=:0
export XAUTHORITY=/home/nickspi5/.Xauthority

# Wait for X server to be ready
log_message "Waiting for X server..."
while ! xset q &>/dev/null; do
    sleep 0.5
done

# Hide desktop elements IMMEDIATELY
log_message "Hiding desktop elements..."
pkill lxpanel 2>/dev/null
sleep 0.2

# STEP 1: Show black screen FIRST (before desktop fully loads)
log_message "Displaying black screen..."
chromium-browser \
    --kiosk \
    --noerrdialogs \
    --disable-infobars \
    --disable-session-crashed-bubble \
    --disable-restore-session-state \
    --start-fullscreen \
    --window-position=0,0 \
    --window-size=1920,1080 \
    "file://$BLACK_PAGE" 2>/dev/null &

BLACK_PID=$!
sleep 3  # Longer wait for black screen to fully render

# Now safely turn off desktop icons
pcmanfm --desktop-off 2>/dev/null

# STEP 2: Play video with better VLC options
if [ -f "$VIDEO_PATH" ]; then
    log_message "Playing startup video..."
    
    # Get video duration first
    DURATION=$(ffprobe -v quiet -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 "$VIDEO_PATH" 2>/dev/null | cut -d. -f1)
    if [ -z "$DURATION" ]; then
        DURATION=10  # Default if can't detect
    fi
    log_message "Video duration: ${DURATION} seconds"
    
    # Play video with better options
    cvlc \
        --fullscreen \
        --no-video-title-show \
        --quiet \
        --intf dummy \
        --play-and-exit \
        "$VIDEO_PATH" 2>/dev/null &
    
    VLC_PID=$!
    
    # Wait for actual video duration plus buffer
    sleep $((DURATION + 2))
    
    # Ensure VLC is really finished
    if ps -p $VLC_PID > /dev/null; then
        kill $VLC_PID 2>/dev/null
        sleep 1
    fi
    
    log_message "Video playback complete"
else
    log_message "Video not found at $VIDEO_PATH"
    sleep 5  # Show black screen for 5 seconds if no video
fi

# Kill any remaining VLC processes
pkill vlc 2>/dev/null
pkill cvlc 2>/dev/null
sleep 1

# Kill black screen
log_message "Closing black screen..."
kill $BLACK_PID 2>/dev/null
sleep 0.5

# STEP 3: Show loading screen immediately
log_message "Launching loading screen..."
chromium-browser \
    --kiosk \
    --noerrdialogs \
    --disable-infobars \
    --disable-session-crashed-bubble \
    --disable-restore-session-state \
    --start-fullscreen \
    "file://$LOADING_PAGE" 2>/dev/null &

LOADING_PID=$!

# Wait for loading screen to complete
log_message "Loading screen running..."
sleep 12  # Increased time for full loading screen

# Kill loading screen
kill $LOADING_PID 2>/dev/null
sleep 0.5

# STEP 4: Launch main Chatty AI interface
log_message "Launching Chatty AI interface..."
chromium-browser \
    --kiosk \
    --noerrdialogs \
    --disable-infobars \
    --disable-session-crashed-bubble \
    --disable-restore-session-state \
    --start-fullscreen \
    "$CHATTY_URL" 2>/dev/null &

MAIN_PID=$!
log_message "Chatty AI interface launched successfully"
log_message "========================================="

# Keep the main interface running
wait $MAIN_PID


