

# Test libcamera tools (should work after reboot)
libcamera-hello --list-cameras

# If that doesn't work, try:
/usr/bin/libcamera-hello --list-cameras

# Test with a simple capture
libcamera-hello --timeout 5000

# Check if we can detect cameras with v4l2
v4l2-ctl --list-devices

# Test specific video devices that might be camera inputs
v4l2-ctl --device=/dev/video0 --info
v4l2-ctl --device=/dev/video1 --info

# Alternative: Check if any USB cameras are detected
lsusb | grep -i camera

# Test Python with libcamera backend for Raspberry Pi
python3 -c "
import cv2
print('Testing different backends...')

# Try with different backends
backends = [cv2.CAP_ANY, cv2.CAP_V4L2, cv2.CAP_GSTREAMER]
backend_names = ['CAP_ANY', 'CAP_V4L2', 'CAP_GSTREAMER']

for i, (backend, name) in enumerate(zip(backends, backend_names)):
    print(f'\\nTesting {name}:')
    for cam_idx in range(8):  # Test more indices since you have /dev/video0-7
        cap = cv2.VideoCapture(cam_idx, backend)
        if cap.isOpened():
            ret, frame = cap.read()
            if ret and frame is not None:
                print(f'  ✅ Camera {cam_idx} works with {name}! Frame shape: {frame.shape}')
                cap.release()
                break
            else:
                print(f'  ⚠️ Camera {cam_idx} opens but no frames with {name}')
        cap.release()
"






