# Create a backup first
cp chatty_ai.py chatty_ai.py.backup3

# Apply the fixes step by step

# Fix 1: Update setup_camera method
sed -i '/def setup_camera/,/return False/c\
    def setup_camera(self):\
        """Initialize camera with proper state management"""\
        try:\
            # Clean up any existing camera first\
            if self.picam2:\
                try:\
                    self.picam2.stop()\
                    self.picam2.close()\
                    time.sleep(1)\
                except:\
                    pass\
                self.picam2 = None\
            \
            # Initialize new camera\
            self.picam2 = Picamera2()\
            self.picam2.configure(self.picam2.create_preview_configuration(\
                main={"format": '\''XRGB8888'\'', "size": (640, 480)}\
            ))\
            self.picam2.start()\
            time.sleep(2)  # Camera warm-up\
            self.camera_initialized = True\
            self.emit_log("Camera initialized successfully", '\''success'\'')\
            return True\
        except Exception as e:\
            self.emit_log(f"Failed to initialize camera: {e}", '\''error'\'')\
            self.camera_initialized = False\
            return False' chatty_ai.py
Now let's fix the critical race condition by moving system_running = True before the thread starts:
bash# Find the line where system_running is set and move it up
sed -i '/self.camera_thread.start()/i\
                    # Set system_running to True BEFORE starting threads\
                    self.system_running = True' chatty_ai.py

# Remove the old system_running = True line
sed -i '/self.system_running = True/d' chatty_ai.py

# Add it back in the correct place (after the comment we just added)
sed -i '/Set system_running to True BEFORE starting threads/a\
                    self.system_running = True' chatty_ai.py
Let's verify the fix was applied correctly:
bashgrep -n -A 10 -B 10 "system_running = True" chatty_ai.py
Key Issue Solved: The race condition where system_running was False when the camera monitoring loop started, causing it to exit immediately. 




