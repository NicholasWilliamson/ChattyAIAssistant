Thank you, Claude,

I ran: nickspi5@raspberrypi1:~ $ cd Chatty_AI
nickspi5@raspberrypi1:~/Chatty_AI $ source chatty-venv/bin/activate
(chatty-venv) nickspi5@raspberrypi1:~/Chatty_AI $ sudo cp /home/nickspi5/Chatty_AI/chatty_ai_startup_enhanced.sh /home/nickspi5/Chatty_AI/chatty_ai_startup_enhanced_backup.sh
(chatty-venv) nickspi5@raspberrypi1:~/Chatty_AI $ nano /home/nickspi5/Chatty_AI/chatty_ai_startup_final.sh

I then pasted the following code into the chatty_ai_startup_final.sh file:

#!/bin/bash
#
# Chatty AI Startup Script
# Shows black screen, video, loading animation, then main interface
#

# Configuration
VIDEO_PATH="/home/nickspi5/Chatty_AI/Chatty_AI_starting.mp4"
LOADING_PAGE="/home/nickspi5/Chatty_AI/templates/chatty_loading.html"
BLACK_IMAGE="/home/nickspi5/Chatty_AI/templates/black.png"
CHATTY_URL="http://localhost:5000"
LOG_FILE="/home/nickspi5/Chatty_AI/logs/startup.log"
USER="nickspi5"

# Create log directory if it doesn't exist
mkdir -p /home/nickspi5/Chatty_AI/logs

# Function to log messages
log_message() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a "$LOG_FILE"
}

# Start logging
log_message "========================================="
log_message "Chatty AI Startup Sequence Initiated"
log_message "========================================="

# Set display
export DISPLAY=:0
export XAUTHORITY=/home/nickspi5/.Xauthority

# Wait for desktop to be fully loaded
log_message "Waiting for desktop to load..."
sleep 15

# Kill any error dialogs
wmctrl -c "Desktop manager is not active" 2>/dev/null

# Display black screen in fullscreen browser window (covers desktop)
log_message "Displaying black screen..."
chromium-browser \
    --kiosk \
    --noerrdialogs \
    --disable-infobars \
    --start-fullscreen \
    --disable-session-crashed-bubble \
    --check-for-update-interval=31536000 \
    "file://$BLACK_IMAGE" 2>/dev/null &

BLACK_PID=$!
sleep 2

# Play video
if [ -f "$VIDEO_PATH" ]; then
    log_message "Playing startup video..."
    
    # Kill the black screen browser
    kill $BLACK_PID 2>/dev/null
    
    # Play video in fullscreen
    cvlc --fullscreen --play-and-exit "$VIDEO_PATH" 2>/dev/null || log_message "Video playback ended"
    
    log_message "Video sequence complete"
else
    log_message "Warning: Video file not found at $VIDEO_PATH"
    # Kill black screen if video doesn't exist
    kill $BLACK_PID 2>/dev/null
fi

# Launch loading screen
log_message "Launching loading screen..."

# Clear any leftover browser instances
pkill -f chromium 2>/dev/null
sleep 1

# Launch loading screen in fullscreen
chromium-browser \
    --kiosk \
    --noerrdialogs \
    --disable-infobars \
    --start-fullscreen \
    --disable-translate \
    --disable-features=TranslateUI \
    --disable-component-update \
    --disable-session-crashed-bubble \
    --check-for-update-interval=31536000 \
    "file://$LOADING_PAGE" 2>/dev/null &

CHROMIUM_PID=$!
log_message "Loading screen launched with PID: $CHROMIUM_PID"

# The loading page will automatically redirect to localhost:5000 after 70 seconds
log_message "System loading sequence in progress..."
log_message "========================================="

# Keep script running
wait $CHROMIUM_PID

I then ran: (chatty-venv) nickspi5@raspberrypi1:~/Chatty_AI $ chmod +x /home/nickspi5/Chatty_AI/chatty_ai_startup_final.sh
(chatty-venv) nickspi5@raspberrypi1:~/Chatty_AI $ sudo apt install wmctrl
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  wmctrl
0 upgraded, 1 newly installed, 0 to remove and 1 not upgraded.
Need to get 20.3 kB of archives.
After this operation, 89.1 kB of additional disk space will be used.
Get:1 http://archive.raspberrypi.com/debian bookworm/main arm64 wmctrl arm64 1.07-7+rpt1 [20.3 kB]
Fetched 20.3 kB in 1s (18.7 kB/s) 
Selecting previously unselected package wmctrl.
(Reading database ... 177188 files and directories currently installed.)
Preparing to unpack .../wmctrl_1.07-7+rpt1_arm64.deb ...
Unpacking wmctrl (1.07-7+rpt1) ...
Setting up wmctrl (1.07-7+rpt1) ...
Processing triggers for man-db (2.11.2-2) ...
Scanning processes...                                                                                                         
Scanning processor microcode...                                                                                               
Scanning linux images...                                                                                                      

The processor microcode seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.

(chatty-venv) nickspi5@raspberrypi1:~/Chatty_AI $ nano /home/nickspi5/.config/autostart/chatty-ai-launcher.service

I pasted the following code for the chatty-ai-launcher.service file:

[Desktop Entry]
Type=Application
Name=Chatty AI Auto Launcher
Comment=Automatically launch Chatty AI on boot
Exec=/bin/bash /home/nickspi5/Chatty_AI/chatty_ai_startup_final.sh
Hidden=false
NoDisplay=false
X-GNOME-Autostart-enabled=true
Terminal=false
StartupNotify=false

I then ran: (chatty-venv) nickspi5@raspberrypi1:~/Chatty_AI $ cat > /home/nickspi5/Chatty_AI/templates/black.html << 'EOF'
<!DOCTYPE html>
<html>
<head>
    <style>
        body {
            margin: 0;
            padding: 0;
            background: black;
            overflow: hidden;
            cursor: none;
        }
    </style>
</head>
<body></body>
</html>
EOF
(chatty-venv) nickspi5@raspberrypi1:~/Chatty_AI $ nano /home/nickspi5/Chatty_AI/chatty_ai_startup_final.sh

I then edited one line of code in the chatty_ai_startup_final.sh file to be: 

BLACK_IMAGE="/home/nickspi5/Chatty_AI/templates/black.html"

I then rebooted my Raspberry PI 5.








