# FIX FOR suppress_flask_warnings SCOPE ERROR

# SOLUTION 1: Move the function OUTSIDE the class (RECOMMENDED)
# Place this BEFORE the ChattyAIWebServer class definition, around line 115:

def suppress_flask_warnings():
    """Suppress Flask development server warnings"""
    import logging
    import warnings
    
    # Suppress Werkzeug (Flask's development server) logging
    log = logging.getLogger('werkzeug')
    log.setLevel(logging.ERROR)

    # Suppress Flask development server warning
    warnings.filterwarnings('ignore', message='This is a development server*')
    warnings.filterwarnings('ignore', message='Do not use it in a production deployment*')


# Then your existing code at the bottom stays the same:
if __name__ == '__main__':
    # Suppress development server warnings
    suppress_flask_warnings()
    main()


# SOLUTION 2: Alternative - Call it as a method (if you prefer to keep it in the class)
# Change the bottom of your file to this:

def main():
    """Main function"""
    try:
        # Check audio devices
        try:
            print("Available audio devices:")
            print(sd.query_devices())
            print("=" * 60)
        except Exception as e:
            print(f"Could not query audio devices: {e}")
        
        # Create server instance
        server = ChattyAIWebServer()
        
        # Suppress warnings using the server method
        server.suppress_flask_warnings()
        
        # Run server
        server.run(debug=False)
        
    except KeyboardInterrupt:
        print("\n\nShutdown requested by user")
    except Exception as e:
        logger.error(f"Fatal error: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()  # Remove the suppress_flask_warnings() call from here


# SOLUTION 3: Quick inline fix (simplest)
# Replace your current if __name__ == '__main__': section with:

if __name__ == '__main__':
    # Inline warning suppression
    import logging
    import warnings
    
    # Suppress Flask development server warnings
    log = logging.getLogger('werkzeug')
    log.setLevel(logging.ERROR)
    warnings.filterwarnings('ignore', message='This is a development server*')
    warnings.filterwarnings('ignore', message='Do not use it in a production deployment*')
    
    main()

