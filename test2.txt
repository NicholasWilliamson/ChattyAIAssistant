
Step 2: Install System Dependencies
Install all the required system packages:
bash
# Core dependencies
sudo apt install -y python3-pip python3-venv git cmake build-essential
sudo apt install -y portaudio19-dev python3-pyaudio
sudo apt install -y libcamera-tools libcamera-dev
sudo apt install -y opencv-contrib-python
sudo apt install -y espeak espeak-data libespeak1 libespeak-dev
sudo apt install -y pulseaudio pulseaudio-utils alsa-utils
sudo apt install -y ffmpeg libavformat-dev libavcodec-dev libavdevice-dev libavutil-dev libswscale-dev libswresample-dev

# For face recognition
sudo apt install -y libopenblas-dev liblapack-dev libatlas-base-dev gfortran
Step 3: Create Project Structure
bash
# Create main directory
mkdir -p ~/chatty_ai
cd ~/chatty_ai

# Create subdirectories
mkdir -p models faces security_photos logs static/css static/js templates
Step 4: Copy Files from Backup
Transfer all your backup files from your laptop to the Pi. You can use:
•	SCP: scp -r /path/to/backup/* pi@your-pi-ip:~/chatty_ai/
•	USB drive: Copy files via USB stick
•	SFTP client: Like FileZilla or WinSCP
Make sure you copy:
•	All Python files (chatty_ai.py, web_interface.py, model_preloader.py, etc.)
•	The models/ directory with your AI models
•	The faces/ directory with face encodings
•	All HTML templates and static files
•	Configuration files
•	Any custom scripts
Step 5: Set Up Python Virtual Environment
bash
cd ~/chatty_ai
python3 -m venv venv
source venv/bin/activate
Step 6: Install Python Dependencies
bash
# Install the main packages (adjust versions as needed)
pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
pip install transformers
pip install whisper
pip install openai-whisper
pip install SpeechRecognition
pip install pyttsx3
pip install face_recognition
pip install opencv-python
pip install flask
pip install flask-socketio
pip install requests
pip install python-telegram-bot
pip install pyaudio
pip install numpy
pip install pillow
pip install python-dotenv

# Any other specific packages your system uses
Step 7: Set File Permissions
bash
cd ~/chatty_ai
chmod +x *.py
chmod +x *.sh  # If you have shell scripts
sudo chown -R pi:pi ~/chatty_ai
Step 8: Recreate Systemd Services
Create the service files again:
bash
# Create preloader service
sudo nano /etc/systemd/system/chatty-ai-preloader.service
Copy your preloader service configuration.
bash
# Create web interface service  
sudo nano /etc/systemd/system/chatty-ai-web.service
Copy your web interface service configuration.
bash
# Create main service (if you have one)
sudo nano /etc/systemd/system/chatty-ai.service
Then enable and start:
bash
sudo systemctl daemon-reload
sudo systemctl enable chatty-ai-preloader.service
sudo systemctl enable chatty-ai-web.service
sudo systemctl start chatty-ai-preloader.service
sudo systemctl start chatty-ai-web.service
Step 9: Configure Audio/Camera
bash
# Test camera
libcamera-detect
cam --list

# Test audio
speaker-test -t wav -c 2 -l 1
arecord -l
Step 10: Test the Installation
bash
# Check services
systemctl status chatty-ai-preloader.service
systemctl status chatty-ai-web.service

# Open web interface
# Go to http://localhost:5000 in browser
Important Notes:
•	Models: Make sure your AI models (whisper, llama, etc.) are in the correct models/ directory
•	Face encodings: Ensure your faces/ directory and encodings are restored
•	Configuration: Check any config files have correct paths
•	Telegram: If you use Telegram integration, verify your bot token is configured
•	Audio devices: You may need to reconfigure audio input/output devices
Quick Recovery Script
You might want to create a recovery script that combines steps 2-6 for future use:
bash
nano ~/install_dependencies.sh
# Put all the apt install and pip install commands in this script
chmod +x ~/install_dependencies.sh

